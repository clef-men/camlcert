From simuliris Require Import
  prelude.
From simuliris.data_lang Require Export
  syntax.
From simuliris.data_lang Require Import
  notations.

Implicit Types func func_dps : data_function.
Implicit Types annot : data_annotation.
Implicit Types v v‚Çõ v‚Çú : data_val.
Implicit Types e e‚Çõ e‚Çú : data_expr.
Implicit Types prog prog‚Çõ prog‚Çú : data_program.

Definition tmc_mapping :=
  gmap data_function data_function.

Section tmc_expr.
  Context (Œæ : tmc_mapping).

  Inductive tmc_expr_dir : data_expr ‚Üí data_expr ‚Üí Prop :=
    | tmc_expr_dir_val v :
        tmc_expr_dir
          v
          v
    | tmc_expr_dir_var x :
        tmc_expr_dir
          $x
          $x
    | tmc_expr_dir_let e‚Çõ1 e‚Çõ2 e‚Çú1 e‚Çú2 :
        tmc_expr_dir e‚Çõ1 e‚Çú1 ‚Üí
        tmc_expr_dir e‚Çõ2 e‚Çú2 ‚Üí
        tmc_expr_dir
          (let: e‚Çõ1 in e‚Çõ2)
          (let: e‚Çú1 in e‚Çú2)
    | tmc_expr_dir_call e‚Çõ1 e‚Çõ2 e‚Çú1 e‚Çú2 :
        tmc_expr_dir e‚Çõ1 e‚Çú1 ‚Üí
        tmc_expr_dir e‚Çõ2 e‚Çú2 ‚Üí
        tmc_expr_dir
          (e‚Çõ1 e‚Çõ2)
          (e‚Çú1 e‚Çú2)
    | tmc_expr_dir_unop op e‚Çõ e‚Çú :
        tmc_expr_dir e‚Çõ e‚Çú ‚Üí
        tmc_expr_dir
          (DataUnop op e‚Çõ)
          (DataUnop op e‚Çú)
    | tmc_expr_dir_binop op e‚Çõ1 e‚Çõ2 e‚Çú1 e‚Çú2 :
        tmc_expr_dir e‚Çõ1 e‚Çú1 ‚Üí
        tmc_expr_dir e‚Çõ2 e‚Çú2 ‚Üí
        tmc_expr_dir
          (DataBinop op e‚Çõ1 e‚Çõ2)
          (DataBinop op e‚Çú1 e‚Çú2)
    | tmc_expr_dir_binop_det op e‚Çõ1 e‚Çõ2 e‚Çú1 e‚Çú2 :
        tmc_expr_dir e‚Çõ1 e‚Çú1 ‚Üí
        tmc_expr_dir e‚Çõ2 e‚Çú2 ‚Üí
        tmc_expr_dir
          (DataBinopDet op e‚Çõ1 e‚Çõ2)
          (DataBinopDet op e‚Çú1 e‚Çú2)
    | tmc_expr_dir_if e‚Çõ0 e‚Çõ1 e‚Çõ2 e‚Çú0 e‚Çú1 e‚Çú2 :
        tmc_expr_dir e‚Çõ0 e‚Çú0 ‚Üí
        tmc_expr_dir e‚Çõ1 e‚Çú1 ‚Üí
        tmc_expr_dir e‚Çõ2 e‚Çú2 ‚Üí
        tmc_expr_dir
          (if: e‚Çõ0 then e‚Çõ1 else e‚Çõ2)
          (if: e‚Çú0 then e‚Çú1 else e‚Çú2)
    | tmc_expr_dir_block tag e‚Çõ1 e‚Çõ2 e‚Çú1 e‚Çú2 :
        tmc_expr_dir e‚Çõ1 e‚Çú1 ‚Üí
        tmc_expr_dir e‚Çõ2 e‚Çú2 ‚Üí
        tmc_expr_dir
          (&tag e‚Çõ1 e‚Çõ2)
          (&tag e‚Çú1 e‚Çú2)
    | tmc_expr_dir_block_dps_1 tag e‚Çõ1 e‚Çõ2 e‚Çú1 e‚Çú2 :
        tmc_expr_dir e‚Çõ1 e‚Çú1 ‚Üí
        tmc_expr_dps $0 ùüö e‚Çõ2.[ren (+1)] e‚Çú2 ‚Üí
        tmc_expr_dir
          (&tag e‚Çõ1 e‚Çõ2)
          (let: &tag e‚Çú1 #() in e‚Çú2 ;; $0)
    | tmc_expr_dir_block_dps_2 tag e‚Çõ1 e‚Çõ2 e‚Çú1 e‚Çú2 :
        tmc_expr_dir e‚Çõ2 e‚Çú2 ‚Üí
        tmc_expr_dps $0 ùüô e‚Çõ1.[ren (+1)] e‚Çú1 ‚Üí
        tmc_expr_dir
          (&tag e‚Çõ1 e‚Çõ2)
          (let: &tag #() e‚Çú2 in e‚Çú1 ;; $0)
    | tmc_expr_dir_block_det tag e‚Çõ1 e‚Çõ2 e‚Çú1 e‚Çú2 :
        tmc_expr_dir e‚Çõ1 e‚Çú1 ‚Üí
        tmc_expr_dir e‚Çõ2 e‚Çú2 ‚Üí
        tmc_expr_dir
          (&&tag e‚Çõ1 e‚Çõ2)
          (&&tag e‚Çú1 e‚Çú2)
    | tmc_expr_dir_load e‚Çõ1 e‚Çõ2 e‚Çú1 e‚Çú2 :
        tmc_expr_dir e‚Çõ1 e‚Çú1 ‚Üí
        tmc_expr_dir e‚Çõ2 e‚Çú2 ‚Üí
        tmc_expr_dir
          (![e‚Çõ2] e‚Çõ1)
          (![e‚Çú2] e‚Çú1)
    | tmc_expr_dir_store e‚Çõ1 e‚Çõ2 e‚Çõ3 e‚Çú1 e‚Çú2 e‚Çú3 :
        tmc_expr_dir e‚Çõ1 e‚Çú1 ‚Üí
        tmc_expr_dir e‚Çõ2 e‚Çú2 ‚Üí
        tmc_expr_dir e‚Çõ3 e‚Çú3 ‚Üí
        tmc_expr_dir
          (e‚Çõ1 <-[e‚Çõ2]- e‚Çõ3)
          (e‚Çú1 <-[e‚Çú2]- e‚Çú3)
  with tmc_expr_dps : data_expr ‚Üí data_expr ‚Üí data_expr ‚Üí data_expr ‚Üí Prop :=
    | tmc_expr_dps_base dst idx e‚Çõ e‚Çú :
        tmc_expr_dir e‚Çõ e‚Çú ‚Üí
        tmc_expr_dps dst idx
          e‚Çõ
          (dst <-[idx]- e‚Çú)
    | tmc_expr_dps_let dst idx e‚Çõ1 e‚Çõ2 e‚Çú1 e‚Çú2 :
        tmc_expr_dir e‚Çõ1 e‚Çú1 ‚Üí
        tmc_expr_dps dst.[ren (+1)] idx.[ren (+1)] e‚Çõ2 e‚Çú2 ‚Üí
        tmc_expr_dps dst idx
          (let: e‚Çõ1 in e‚Çõ2)
          (let: e‚Çú1 in e‚Çú2)
    | tmc_expr_dps_call dst idx func annot e‚Çõ func_dps e‚Çú e‚Çú' :
        Œæ !! func = Some func_dps ‚Üí
        tmc_expr_dir e‚Çõ e‚Çú ‚Üí
        e‚Çú' = (let: e‚Çú in (DataFunc func_dps annot) (dst.[ren (+1)], idx.[ren (+1)], $0))%data_expr ‚Üí
        tmc_expr_dps dst idx
          ((DataFunc func annot) e‚Çõ)
          e‚Çú'
    | tmc_expr_dps_if dst idx e‚Çõ0 e‚Çõ1 e‚Çõ2 e‚Çú0 e‚Çú1 e‚Çú2 :
        tmc_expr_dir e‚Çõ0 e‚Çú0 ‚Üí
        tmc_expr_dps dst idx e‚Çõ1 e‚Çú1 ‚Üí
        tmc_expr_dps dst idx e‚Çõ2 e‚Çú2 ‚Üí
        tmc_expr_dps dst idx
          (if: e‚Çõ0 then e‚Çõ1 else e‚Çõ2)
          (if: e‚Çú0 then e‚Çú1 else e‚Çú2)
    | tmc_expr_dps_block_1 dst idx tag e‚Çõ1 e‚Çõ2 e‚Çú1 e‚Çú2 e‚Çú :
        tmc_expr_dir e‚Çõ1 e‚Çú1 ‚Üí
        tmc_expr_dps $0 ùüö e‚Çõ2.[ren (+1)] e‚Çú2 ‚Üí
        e‚Çú = (let: &tag e‚Çú1 #() in dst.[ren (+1)] <-[idx.[ren (+1)]]- $0 ;; e‚Çú2)%data_expr ‚Üí
        tmc_expr_dps dst idx
          (&tag e‚Çõ1 e‚Çõ2)
          e‚Çú
    | tmc_expr_dps_block_2 dst idx tag e‚Çõ1 e‚Çõ2 e‚Çú1 e‚Çú2 e‚Çú :
        tmc_expr_dir e‚Çõ2 e‚Çú2 ‚Üí
        tmc_expr_dps $0 ùüô e‚Çõ1.[ren (+1)] e‚Çú1 ‚Üí
        e‚Çú = (let: &tag #() e‚Çú2 in dst.[ren (+1)] <-[idx.[ren (+1)]]- $0 ;; e‚Çú1)%data_expr ‚Üí
        tmc_expr_dps dst idx
          (&tag e‚Çõ1 e‚Çõ2)
          e‚Çú.
End tmc_expr.

Scheme tmc_expr_dir_dps_ind := Minimality for tmc_expr_dir Sort Prop
with tmc_expr_dps_dir_ind := Minimality for tmc_expr_dps Sort Prop.
Combined Scheme tmc_expr_ind from tmc_expr_dir_dps_ind, tmc_expr_dps_dir_ind.

Create HintDb tmc.

#[global] Hint Constructors tmc_expr_dir : tmc.
#[global] Hint Constructors tmc_expr_dps : tmc.

Record tmc {prog‚Çõ prog‚Çú} := {
  tmc_Œæ : gmap data_function data_function ;

  tmc_Œæ_dom :
    dom tmc_Œæ ‚äÜ dom prog‚Çõ ;
  tmc_dom :
    dom prog‚Çú = dom prog‚Çõ ‚à™ map_img tmc_Œæ ;

  tmc_dir func def‚Çõ :
    prog‚Çõ !! func = Some def‚Çõ ‚Üí
      ‚àÉ e‚Çú,
      tmc_expr_dir tmc_Œæ def‚Çõ.(data_definition_body) e‚Çú ‚àß
      prog‚Çú !! func =
        Some (
          rec: def‚Çõ.(data_definition_annot) :=
            e‚Çú
        )%data_def ;

  tmc_dps func def‚Çõ func_dps :
    prog‚Çõ !! func = Some def‚Çõ ‚Üí
    tmc_Œæ !! func = Some func_dps ‚Üí
      ‚àÉ e‚Çú,
      tmc_expr_dps tmc_Œæ $1 $2 def‚Çõ.(data_definition_body) e‚Çú ‚àß
      prog‚Çú !! func_dps =
        Some (
          rec: def‚Çõ.(data_definition_annot) :=
            let: ![ùüô] $0 in
            let: ![ùüö] $0 in
            let: ![ùüô] $1 in
            let: ![ùüö] $3 in
            e‚Çú
        )%data_def ;
}.
#[global] Arguments tmc : clear implicits.
